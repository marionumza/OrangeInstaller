#encoding: utf-8
from OpenOrange import *

ParentOpportunityWindow = SuperClass("OpportunityWindow","EventTransactionWindow",__file__)
class OpportunityWindow(ParentOpportunityWindow):

    def afterEdit(self,fieldname):
        ParentOpportunityWindow.afterEdit(self,fieldname)
        if (fieldname == "ArtCode"):
            self.getRecord().pasteArtCode()
        elif (fieldname == "ProbabilityCalculation"):
            self.getRecord().pasteProbabilityCalculation()
            self.refreshChecklist()

    def afterEditRow(self, fieldname, rowfieldname, rownr):
        ParentOpportunityWindow.afterEditRow(self,fieldname,rowfieldname, rownr)
        record = self.getRecord()
        if (fieldname == "Events"):
            if (rowfieldname == "NextContactDate"):
                record.DateSet = True
                record.NextContactDate = record.Events[rownr].NextContactDate
            elif (rowfieldname == "State"):
                record.pasteState()
        elif fieldname == "Items":
            itemrow = record.Items[rownr]
            if rowfieldname == "ArtCode":
                itemrow.pasteArtCode(record)
            elif rowfieldname == "State":
                itemrow.pasteState(record)
        elif fieldname == "Competitors":
            comprow = record.Competitors[rownr]
            if rowfieldname == "CompCode":
                comprow.pasteCompCode()

    def beforeEdit(self,fieldname):
        res = ParentOpportunityWindow.beforeEdit(self,fieldname)
        if not res: return res
        record = self.getRecord()
        if (fieldname == "Amount"):
            if (record.AmountType == 0):
                return True
            else:
                return False
        elif (fieldname == "MinAmount" or fieldname == "MaxAmount"):
            if (record.AmountType == 1):
                return True
            else:
                return False
        return True

    def showOpportunityQuotesReport(self):
        record = self.getRecord()
        if record.SerNr:
            from OpportunityQuotesReport import OpportunityQuotesReport
            report = OpportunityQuotesReport()
            report.getRecord().OpportunityNr = record.SerNr
            report.open(False)

    def contactList(self):
        record = self.getRecord()
        from ContactList import ContactList
        report = ContactList()
        report.defaults()
        report.getRecord().CustCode = record.CustCode
        report.getRecord().ContactType = 0
        report.open(False)

    def filterPasteWindowRow(self, detailfieldname, rowfieldname, rownr):
        if detailfieldname == "Items":
            if rowfieldname == "ArtCode":
                filters = "{UseType} = 1 or {UseType} = 0 or {UseType} is null\n"
                return filters
        return ParentOpportunityWindow.filterPasteWindowRow(self,detailfieldname, rowfieldname, rownr)

    def filterPasteWindow(self, fieldname):
        if fieldname == "PersonCode":
            if self.getRecord().CustCode:
                return "{CustCode} = s|%s|" % self.getRecord().CustCode
        elif (fieldname == "Circuit"):
            return "{Type} = i|2|"

    def genQuote(self):
        quote = self.getRecord().genQuote()
        if quote:
            quote.openInWindow()
            self.closeAfterGen()
        else:
            message(quote)
        return quote

    def newEvent(self):
        act = ParentOpportunityWindow.newEvent(self)
        act.CustCode = self.getRecord().CustCode
        act.CustName = self.getRecord().CustName
        act.Users = self.getRecord().User
        
    def afterShowRecord(self):
        ParentOpportunityWindow.afterShowRecord(self)
        self.refreshChecklist()
        self.showQuotesReportView()
       
    def refreshChecklist(self):
        from OpportunityChecklist import OpportunityChecklist
        report = OpportunityChecklist()
        report.defaults()
        reportView = self.getReportView("ChecklistReportView")
        if reportView:
            report.setView(reportView)
            report.opportunity = self.getRecord()
            report.open(False)
            
    def showQuotesReportView(self):
        reportView = self.getReportView("QuotesReportView")
        if reportView:
            record = self.getRecord()
            if record.SerNr:
                from OpportunityQuotesReport import OpportunityQuotesReport
                report = OpportunityQuotesReport()
                report.Embedded = True
                report.setView(reportView)
                report.getRecord().OpportunityNr = record.SerNr
                report.open(False)
